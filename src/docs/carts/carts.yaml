openapi: 3.0.0
info:
  version: 1.0.0
  title: Documentaci√≥n de API de Productos

paths:
  /api/cartsDb/allCarts:
    get:
      summary: Obtener todas los carritos
      tags:
        - Carts
      responses:
        "200":
          description: Los carritos se obtuvieron de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Error interno del servidor
  /api/cartsDb/{cartId}/product/{productId}:
    post:
      summary: Agregar un producto al carrito seleccionado
      tags:
        - Carts
      parameters:
        - name: cartId
          in: path
          required: true
          description: ID del carrito donde se agrega el producto (utiliza id de mongo)
          schema:
            type: string
        - name: productId
          in: path
          required: true
          description: ID del producto a agregar (utiliza id de mongo)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCartItem" # Cambiar a ProductCartItem
      responses:
        "200":
          description: Los productos se obtuvieron de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Products"
        "500":
          description: Error interno del servidor
  /api/cartsDb/{cid}/product/{pid}:
    delete:
      summary: elimina un producto del carrito seleccionado
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id es del carrito donde se elimina el producto (utiliza id de mongo)
          schema:
            $type: string
        - name: productId
          in: path
          required: true
          description: id es del producto a eliminar  (utiliza id creado por el usuario por el momento, modificacion pendiente)
          schema:
            $type: number
      responses:
        "200":
          description: Los productos se obtuvieron de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Products"
        "500":
          description: Error interno del servidor
  /api/cartsDb/{cid}:
    get:
      summary: Obtener carrito por ID
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: id es el id del producto
          schema:
            $type: number
      responses:
        "200":
          description: El productos se obtuvo de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Error interno del servidor
    delete:
      summary: vaciar carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id es el del carrito  a vaciar (utiliza id de mongo)
          schema:
            $type: string
      responses:
        "200":
          description: El carrito se vacio de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Error interno del servidor
  /api/cartsDb/{cid}/:
    put:
      summary: actualizar carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id es el del carrito  a vaciar (utiliza id de mongo)
          schema:
            $type: string
      responses:
        "200":
          description: El carrito se vacio de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Error interno del servidor
  /api/cartsDb/{cid}/purchase:
    post:
      summary: realizar compra
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Realiza la compra de los productos con stock suficiente en el carrito
          schema:
            $type: string
      responses:
        "200":
          description: El carrito se vacio de forma correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Error interno del servidor
components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito
        productos:
          type: array
          items:
            $ref: "#/components/schemas/ProductCartItem" 
      example:
        _id: "64c67a469edbdc207e69a3f0"
        productos:
          - producto: "botas de cuero"
            quantity: 1
            id: "2"
            _id: "gsa98273skjhgda8912"

    ProductCartItem: 
      type: object
      properties:
        producto:
          type: string
          description: Nombre del producto
        quantity:
          type: integer
          description: Cantidad del producto en el carrito
        id:
          type: string
          description: ID del producto
        _id:
          type: string
          description: ID interno del producto en el carrito
